#!/bin/bash

verb=n
go=n

state_estimator=state_estimator
log_nmea=n

for arg in $*
do
    if [[ $arg =~ ^[A-Za-z0-9_]*=[A-Za-z0-9_]*$ ]]; then
	param=(${arg//=/ })
	case ${param[0]} in
	    "state_estimator") state_estimator=${param[1]};;   
	    "ch_state") ch_state=${param[1]};;   
	    "ch_engstate") ch_engstate=${param[1]};;
	    "ch_nmea_data_in") ch_nmea_data_in=${param[1]};;
	    "ch_nmea_data_out") ch_nmea_data_out=${param[1]};;
	    "ch_n2k_data_in") ch_n2k_data_in=${param[1]};;
	    "ch_n2k_data_out") ch_n2k_data_out=${param[1]};;
	    "ch_time_sync") ch_time_sync=${param[1]};;
	    "log_nmea")log_nmea=${param[1]};;
	    "replay") replay=${param[1]};;
	    "verb") verb=${param[1]};;
	    "go") go=${param[1]};;
	esac
    fi    
done

. ../config

path_csv=$path_data/sim_$stime.csv

$FILTER state_estimator $state_estimator
$FSET $state_estimator replay $replay

if [ -n "$ch_state" ]; then
    $FSET $state_estimator state $ch_state
fi

if [ -n "$ch_engstate" ]; then
    $FSET $state_estimator eng_state $ch_engstate
fi

if [ -n "$ch_nmea_data_in" ]; then
    $FSET $state_estimator nmea_data_in $ch_nmea_data_in
fi

if [ -n "$ch_nmea_data_out" ]; then
    $FSET $state_estimator nmea_data_out $ch_nmea_data_out
fi

if [ -n "$ch_n2k_data_in" ]; then
    $FSET $state_estimator n2k_data_in $ch_n2k_data_in
fi

if [ -n "$ch_n2k_data_out" ]; then
    $FSET $state_estimator n2k_data_out $ch_n2k_data_out
fi

if [ -n "$ch_time_sync" ]; then    
    $FSET $state_estimator time_sync $ch_time_sync
fi

$FSET $state_estimator log_nmea $log_nmea

$RUN $state_estimator
